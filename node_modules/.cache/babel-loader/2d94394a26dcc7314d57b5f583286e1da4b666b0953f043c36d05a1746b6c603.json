{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneza\\\\React_Project\\\\Investment Calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './assets/investment-calculator-logo.png';\nimport Form from './Components/NewInvestment/InvestmentForm';\nimport Header from './Components/UI/Header';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [investmentsData, setInvestmentsData] = useState('');\n  const [yearlyData, setYearlyData] = useState([]);\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let currentSavings = +userInput.currentSavings; // + convert a variable to number if possible\n    let yearlyContribution = +userInput.yearlySavings; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput.expectedInterest / 100;\n    const duration = +userInput.investmentDuration;\n    for (let i = 0; i < duration; i++) {\n      let totalSavings_, totalYearlyContribution_;\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      totalSavings_ = currentSavings++;\n      totalYearlyContribution_ = yearlyContribution++;\n      const data = {\n        id: Math.random().toString(),\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalYearlyContribution: totalYearlyContribution_,\n        totalSavings: totalSavings_\n      };\n      setYearlyData(prevData => {\n        return [data, ...prevData];\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest (Year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invested Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: yearlyData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.savingsEndOfYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.yearlyInterest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.totalYearlyContribution\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.totalSavings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L2hTGYim4KbKSMBTHo5ostNJKu4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Form","Header","useState","jsxDEV","_jsxDEV","App","_s","yearlyData","setYearlyData","calculateHandler","userInput","currentSavings","yearlyContribution","yearlySavings","expectedReturn","expectedInterest","duration","investmentDuration","i","totalSavings_","totalYearlyContribution_","yearlyInterest","data","id","Math","random","toString","year","savingsEndOfYear","totalYearlyContribution","totalSavings","prevData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/aneza/React_Project/Investment Calculator/src/App.js"],"sourcesContent":["import logo from './assets/investment-calculator-logo.png';\nimport Form from './Components/NewInvestment/InvestmentForm';\nimport Header from './Components/UI/Header'\nimport { useState } from 'react';\nfunction App() {\n\n  // const [investmentsData, setInvestmentsData] = useState('');\n  const [yearlyData, setYearlyData] = useState([]);\n\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let currentSavings = +userInput.currentSavings; // + convert a variable to number if possible\n    let yearlyContribution = +userInput.yearlySavings; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput.expectedInterest / 100;\n    const duration = +userInput.investmentDuration;\n\n    \n    for (let i = 0; i < duration; i++) {\n      let totalSavings_, totalYearlyContribution_;\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      totalSavings_ = currentSavings++;\n      totalYearlyContribution_ = yearlyContribution++;\n\n      const data = { \n        id: Math.random().toString(),\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalYearlyContribution: totalYearlyContribution_,\n        totalSavings: totalSavings_\n      }\n      setYearlyData(prevData => {\n        return [data , ...prevData]\n      });\n\n    }\n  };\n\n  return (\n    <div>\n     \n      <Header/>\n      <Form onSubmit={calculateHandler} />\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n      <table className=\"result\">\n        <thead>\n          <tr>\n            <th>Year</th>\n            <th>Total Savings</th>\n            <th>Interest (Year)</th>\n            <th>Total Interest</th>\n            <th>Invested Capital</th>\n          </tr>\n        </thead>\n        <tbody>\n          \n          {yearlyData.map((item,index) => (\n            <tr key={index}>\n              <td>{item.year}</td>\n              <td>{item.savingsEndOfYear}</td>\n              <td>{item.yearlyInterest}</td>\n              <td>{item.totalYearlyContribution}</td>\n              <td>{item.totalSavings}</td>\n             </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
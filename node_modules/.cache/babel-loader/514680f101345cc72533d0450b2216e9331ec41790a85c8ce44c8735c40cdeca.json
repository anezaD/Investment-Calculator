{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneza\\\\React_Project\\\\Investment Calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport Investments from \"./Components/Investments/Investments\";\nimport Form from \"./Components/NewInvestment/InvestmentForm\";\nimport Header from \"./Components/UI/Header\";\nimport Table from \"./Components/UI/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [title_, setTitle] = useState(\"Header Title\");\n  const [logo_, setLogo] = useState(logo);\n  const [yearlyData, setYearlyData] = useState([]);\n  const calculateHandler = userInput => {\n    // You might not directly want to bind it to the submit event on the form though...\n    let currentSavings = +userInput.currentSavings; // + convert a variable to number if possible\n    let yearlyContribution = +userInput.yearlySavings;\n    const expectedReturn = +userInput.expectedInterest / 100;\n    const duration = +userInput.investmentDuration;\n    for (let i = 0; i < duration; i++) {\n      let totalSavings_, totalYearlyContribution_;\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      totalSavings_ = currentSavings++;\n      totalYearlyContribution_ = yearlyContribution++;\n      const data = {\n        id: Math.random().toString(),\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalYearlyContribution: totalYearlyContribution_,\n        totalSavings: totalSavings_\n      };\n      setYearlyData(prevData => {\n        return [data, ...prevData];\n      });\n    }\n  };\n  const resetHandler = val => {\n    if (val) {\n      setYearlyData([]);\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      imageAtr: logo_,\n      title: title_\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: calculateHandler,\n      onReset: resetHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest (Year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invested Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Investments, {\n        myList: yearlyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9xH1CKjR2DNMqp+cgG83nGCHp1c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","logo","Investments","Form","Header","Table","jsxDEV","_jsxDEV","App","_s","title_","setTitle","logo_","setLogo","yearlyData","setYearlyData","calculateHandler","userInput","currentSavings","yearlyContribution","yearlySavings","expectedReturn","expectedInterest","duration","investmentDuration","i","totalSavings_","totalYearlyContribution_","yearlyInterest","data","id","Math","random","toString","year","savingsEndOfYear","totalYearlyContribution","totalSavings","prevData","resetHandler","val","children","imageAtr","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onReset","myList","_c","$RefreshReg$"],"sources":["C:/Users/aneza/React_Project/Investment Calculator/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport Investments from \"./Components/Investments/Investments\";\nimport Form from \"./Components/NewInvestment/InvestmentForm\";\nimport Header from \"./Components/UI/Header\";\nimport Table from \"./Components/UI/Table\";\n\nfunction App() {\n  const [title_, setTitle] = useState(\"Header Title\");\n  const [logo_, setLogo] = useState(logo);\n  const [yearlyData, setYearlyData] = useState([]);  \n  const calculateHandler = (userInput) => {\n    \n    // You might not directly want to bind it to the submit event on the form though...\n    let currentSavings = +userInput.currentSavings; // + convert a variable to number if possible\n    let yearlyContribution = +userInput.yearlySavings;\n    const expectedReturn = +userInput.expectedInterest / 100;\n    const duration = +userInput.investmentDuration;\n\n    for (let i = 0; i < duration; i++) {\n      let totalSavings_, totalYearlyContribution_;\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      totalSavings_ = currentSavings++;\n      totalYearlyContribution_ = yearlyContribution++;\n\n      const data = {\n        id: Math.random().toString(),\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalYearlyContribution: totalYearlyContribution_,\n        totalSavings: totalSavings_,\n      };\n      setYearlyData((prevData) => {\n        return [data, ...prevData];\n      });\n    }\n  };\n  \n  const resetHandler = (val) => {\n    if(val){\n      setYearlyData([]);\n    };\n  }\n\n  return (\n    <div>\n      <Header imageAtr={logo_} title={title_} />\n      <Form onSubmit={calculateHandler} onReset={resetHandler}/>\n      <Table>\n        <thead>\n          <tr>\n            <th>Year</th>\n            <th>Total Savings</th>\n            <th>Interest (Year)</th>\n            <th>Total Interest</th>\n            <th>Invested Capital</th>\n          </tr>\n        </thead>\n        <Investments myList={yearlyData}/>\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,IAAI,MAAM,2CAA2C;AAC5D,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,cAAc,CAAC;EACnD,MAAM,CAACY,KAAK,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACC,IAAI,CAAC;EACvC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMgB,gBAAgB,GAAIC,SAAS,IAAK;IAEtC;IACA,IAAIC,cAAc,GAAG,CAACD,SAAS,CAACC,cAAc,CAAC,CAAC;IAChD,IAAIC,kBAAkB,GAAG,CAACF,SAAS,CAACG,aAAa;IACjD,MAAMC,cAAc,GAAG,CAACJ,SAAS,CAACK,gBAAgB,GAAG,GAAG;IACxD,MAAMC,QAAQ,GAAG,CAACN,SAAS,CAACO,kBAAkB;IAE9C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;MACjC,IAAIC,aAAa,EAAEC,wBAAwB;MAC3C,MAAMC,cAAc,GAAGV,cAAc,GAAGG,cAAc;MACtDH,cAAc,IAAIU,cAAc,GAAGT,kBAAkB;MACrDO,aAAa,GAAGR,cAAc,EAAE;MAChCS,wBAAwB,GAAGR,kBAAkB,EAAE;MAE/C,MAAMU,IAAI,GAAG;QACXC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QAC5BC,IAAI,EAAET,CAAC,GAAG,CAAC;QACXG,cAAc,EAAEA,cAAc;QAC9BO,gBAAgB,EAAEjB,cAAc;QAChCC,kBAAkB,EAAEA,kBAAkB;QACtCiB,uBAAuB,EAAET,wBAAwB;QACjDU,YAAY,EAAEX;MAChB,CAAC;MACDX,aAAa,CAAEuB,QAAQ,IAAK;QAC1B,OAAO,CAACT,IAAI,EAAE,GAAGS,QAAQ,CAAC;MAC5B,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMC,YAAY,GAAIC,GAAG,IAAK;IAC5B,IAAGA,GAAG,EAAC;MACLzB,aAAa,CAAC,EAAE,CAAC;IACnB;IAAC;EACH,CAAC;EAED,oBACER,OAAA;IAAAkC,QAAA,gBACElC,OAAA,CAACH,MAAM;MAACsC,QAAQ,EAAE9B,KAAM;MAAC+B,KAAK,EAAEjC;IAAO;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CxC,OAAA,CAACJ,IAAI;MAAC6C,QAAQ,EAAEhC,gBAAiB;MAACiC,OAAO,EAAEV;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC1DxC,OAAA,CAACF,KAAK;MAAAoC,QAAA,gBACJlC,OAAA;QAAAkC,QAAA,eACElC,OAAA;UAAAkC,QAAA,gBACElC,OAAA;YAAAkC,QAAA,EAAI;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbxC,OAAA;YAAAkC,QAAA,EAAI;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBxC,OAAA;YAAAkC,QAAA,EAAI;UAAe;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBxC,OAAA;YAAAkC,QAAA,EAAI;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBxC,OAAA;YAAAkC,QAAA,EAAI;UAAgB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRxC,OAAA,CAACL,WAAW;QAACgD,MAAM,EAAEpC;MAAW;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACtC,EAAA,CA1DQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}